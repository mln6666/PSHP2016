
@using WebApplication1.Models

@model WebApplication1.ViewModels.PrimerPlanVM

@{
    ViewBag.Title = "Nueva PS";
}
@if (User.IsInRole("Administrador") | User.IsInRole("Moderador"))
{
    if (TempData["vencer"] != null)
    {
        {
            <input id="vencer" style="display: none" value="@TempData["vencer"]" />

        }

    }
}
<head>
    <script>
        /////////////////Start:Select searchable////////////////
        $(document).ready(function () { $(".js-example-basic-single").select2(); });
        ////////////////End:Select searchable///////////////////
    </script>
    <style>
        .hr5 {
            margin-top: 3px;
            margin-bottom: 15px;
            border: 0;
            border-top: 1px solid #eeeeee;
        }
    </style>
</head>
<h2 class="text-center">Nueva PS</h2>
<hr style="color: grey; border-color: grey" />

@*/////////////EMPIEZA VISTA ORIGINAL//////////////////*@


@using (Html.BeginForm("Create", "PS", null, FormMethod.Post, new { id = "agregarps", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3 style="padding-left:">Datos Generales</h3>
        <hr align="left" class="hr5" style="color: grey; border-color: lightgray; width: 550px;" />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @if (ViewBag.band)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IdAlumno, "Alumno", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control input-sm" style="width: 280px; background-color: lightgray; font-weight: bold">Sin alumnos habilitados</p>
                    @Html.ValidationMessageFor(model => model.IdAlumno, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.IdAlumno, "Alumno", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="js-example-basic-single form-control input-sm" id="IdAlumno" name="IdAlumno" style="font: small-caption; width: 280px; background-color: beige; padding-top: 30px">

                        @if (ViewBag.aluid != null)
                        {
                            <option value="@ViewBag.aluid">@ViewBag.alulegajo -@ViewBag.aluapellido ,@ViewBag.alunombre</option>}
                        else
                        {
                            <option value="">Buscar alumno...</option>}
                        @foreach (var item in ViewBag.alumnos)
                        {
                            <option value="@item.IdAlumno">@item.Legajo -@item.ApellidoAlu ,@item.NombreAlu </option>
                        }
                    </select>

                </div>
                <span id="spanalumno" style="color: red"></span>

            </div>
        }


        <div class="form-group">
            @Html.LabelFor(model => model.CicloLectivo, htmlAttributes: new { @class = "control-label col-md-2", @onkeypress = "solonumeros()" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CicloLectivo, new { htmlAttributes = new { @class = "form-control input-sm", Value = @DateTime.Now.Year, @Min = 2000 } })
                @Html.ValidationMessageFor(model => model.CicloLectivo, "", new { @class = "text-danger" })
                <span id="spanciclolectivo" style="color: red"></span>

            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Cuatrimestre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-10">
                <div class="radio">
                    <label>
                        <input name="Cuatrimestre" id="optionsRadios1" value="1" checked="" type="radio">
                        1º
                    </label>
                    <label> </label>
                    <label>
                        <input name="Cuatrimestre" id="optionsRadios2" value="2" type="radio">
                        2º
                    </label>
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ObservacionesPS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObservacionesPS, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.ObservacionesPS, "", new { @class = "text-danger" })


            </div>

        </div>

        


        <h3 style="padding-left: ">Datos del Plan</h3>
        <hr align="left" class="hr5" style="color: grey; border-color: lightgray; width: 550px;" />

        <div class="form-group">
            @Html.LabelFor(model => model.Tutor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tutor, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Tutor, "", new { @class = "text-danger" })
                <span id="spantutor" style="color: red"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TituloProyecto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TituloProyecto, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.TituloProyecto, "", new { @class = "text-danger" })
                <span id="spantituloproyecto" style="color: red"></span>


            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdTipoPS, "Tipo de PS", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTipoPS", null, "Seleccione un Tipo de PS...", htmlAttributes: new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.IdTipoPS, "", new { @class = "text-danger" })
                <span id="spantipops" style="color: red"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdArea, "Área", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="js-example-basic-single form-control input-sm" id="IdArea" name="IdArea" style="font: small-caption; background-color: beige; padding-top: 30px">
                    <option value="">Buscar área...</option>
                    @foreach (var item in ViewBag.areas)
                {
                        <option value="@item.IdArea">@item.NombreArea</option>
                    }
                </select>

            </div>
            <span id="spanarea" style="color: red"></span>

        </div>
        <div id="ajaxBeginFormResult">
            <div class="form-group">
                @Html.LabelFor(model => model.IdOrganizacion, "Organización", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <select class="js-example-basic-single form-control input-sm" id="IdOrganizacion" name="IdOrganizacion" style="font: small-caption; background-color: beige; padding-top: 30px; display: inline-block">
                        <option value="">Buscar organización...</option>
                        @foreach (var item in ViewBag.organizaciones)
                        {
                            <option value="@item.IdOrganizacion">@item.DenominacionOrg</option>
                        }
                    </select>
                    <a class="btn btn-warning btn-xs" data-toggle="modal" data-target="#myModal" style="padding-right: 6px; padding-left: 6px; padding-top: 4px; padding-bottom: 4px">
                        <span class="glyphicon glyphicon-plus text-center"></span>
                    </a>

                </div>
                <span id="spanorganizacion" style="color: red"></span>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.FechaPresentacionPlan, "Fecha de Presentación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaPresentacionPlan, new { htmlAttributes = new { @class = "form-control input-sm", @onchange = "fechaMayorAActual();" } })
                <span id="spanfechapresentacionplan" style="color: red"></span>
                <span id="spanfechapresentacionplan2" style="color: red"></span>

                @Html.ValidationMessageFor(model => model.FechaPresentacionPlan, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvaluacionPlan, "Fecha de Evaluación", htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEvaluacionPlan, new { htmlAttributes = new { @class = "form-control input-sm", @onchange = "fechaMayorAActual2();" } })
                <span id="spanfechaevaluacionplan" style="color: red"></span>

                @Html.ValidationMessageFor(model => model.FechaEvaluacionPlan, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoEvaluacionPlan, "Estado de Evaluación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.EstadoEvaluacionPlan, htmlAttributes: new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.EstadoEvaluacionPlan, "", new { @class = "text-danger" })
                <span id="spanestadoevaluacionplan" style="color: red"></span>

            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObservacionesPlan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObservacionesPlan, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.ObservacionesPlan, "", new {@class = "text-danger"})
                <span id="spanobservacion" style="color: red"></span>

            </div>
            
        </div>
        <p> <span id="spanfechaestado" style="color: red"></span></p>
    <p>
        <span id="spanobservacionabajo" style="color: red"></span>
    </p>

        <label style="text-align: center">Subir archivo:</label>
        <input type="file" onchange="Formato()" name="uploadFile" id="uploadFile" /><br />
        <span id="archivopdf" style="color:red"></span>







    <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (ViewBag.band)
                {<input value="Guardar" class="btn btn-success btn-md disabled" style="padding-left: initial; padding-right: initial" />
                }
                else
                {
                    <input type="submit" value="Guardar" class="btn btn-success" />}



            </div>
        </div>
    </div>
}


<div>
    <a href="@Url.Action("Index", "PS")" class="btn btn-default"><span class="glyphicon glyphicon-chevron-left"></span> Volver</a>
    @*@Html.ActionLink("Volver", "Index")*@
</div>




<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Nueva organización</h4>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("Create1", "Organizaciones", new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "ajaxBeginFormResult",
                    OnSuccess = "OnSuccess"
                }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Organizacion.DenominacionOrg, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Organizacion.DenominacionOrg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Organizacion.DenominacionOrg, "", new { @class = "text-danger" })
                                <span style="color:red">** Campo requerido</span>

                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Organizacion.DireccionOrg, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Organizacion.DireccionOrg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Organizacion.DireccionOrg, "", new { @class = "text-danger" })
                                <span style="color:green"></span>

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Organizacion.TelefonoOrg, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Organizacion.TelefonoOrg, new { htmlAttributes = new { @class = "form-control", @onkeypress = "solonumeros()" } })
                                @Html.ValidationMessageFor(model => model.Organizacion.TelefonoOrg, "", new { @class = "text-danger" })
                                <span style="color:green"></span>

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Organizacion.DescripcionOrg, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Organizacion.DescripcionOrg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Organizacion.DescripcionOrg, "", new { @class = "text-danger" })
                                <span style="color:green"></span>

                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                                <input type="submit" value="Guardar" class="btn btn-success">
                                @*<input type="reset" value="Vaciar"/>*@
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>
    </div>
</div>






<link href="@Url.Content("~/Content/Select2/select2.min.css")" rel="stylesheet" />
@section Scripts{
    <script src="@Url.Content("~/Content/Select2/select2.min.js")"></script>
    <script src="http://malsup.github.com/jquery.form.js"></script>

    <script>
        /////////////////Start:Select searchable////////////////
        $(document).ready(function () {
            $(".js-example-basic-single").select2();
        });
        ////////////////End:Select searchable///////////////////
        function OnSuccess() {
            $("#myModal .close").click();
            $('.modal-backdrop').remove();

            //alert("Operacion completada");
            //bootbox.alert("Operación correcta.", function () {
            //    $('.modal-backdrop').remove();
            //});


        }

        function Formato() {
            console.log($('#uploadFile').val().split('.')[1]);
            if ($('#uploadFile').val().split('.')[1] != "pdf") {
                event.preventDefault();
                $('#archivopdf').text("El formato de archivo debe ser PDF");
            } else {
                $('#archivopdf').text("");
            }



        }

        function fechaMayorAActual() {
            var anio = $('#FechaPresentacionPlan').val().split("-");
            anio = anio[0];

            if ($('#FechaPresentacionPlan').val().trim() > new Date().toISOString().substring(0, 10)) {
                $('#spanfechapresentacionplan').text("Ésta fecha no puede ser superior a la fecha actual.");

            } else {
                $('#spanfechapresentacionplan').text("");

            }
            if (anio < $('#CicloLectivo').val() || anio - $('#CicloLectivo').val() > 1) {
                $('#spanfechapresentacionplan2').text("El año debe ser igual o superior en 1 al ciclo lectivo.");

            } else {
                $('#spanfechapresentacionplan2').text("");
            }

        }


        function fechaMayorAActual2() {

            if ($('#FechaEvaluacionPlan').val().trim() > new Date().toISOString().substring(0, 10)) {
                $('#spanfechaevaluacionplan').text("Ésta fecha no puede ser superior a la fecha actual.");

            } else {
                $('#spanfechaevaluacionplan').text("");

            }

        }

        $('#agregarps').submit(function (e) {
            var permiso = this;
            e.preventDefault();

            var isValidItem = true;
            var fechapresentacionplan = true;
            var fechaevaluacionplan = true;
            var tituloproyecto = true;
            var tutor = true;
            var area = true;
            var organizacion = true;
            var ciclolectivo = true;
            var tipops = true;
            var fechaestado = true;
            var alumno = true;
            var observacion = true;

            var fecha1 = new Date($('#FechaPresentacionPlan').val());
            var fecha2 = new Date($('#FechaEvaluacionPlan').val());

            var minfecha = new Date("01/01/2000");
            var maxfecha = new Date("01/01/2100");

            if (fecha2 < fecha1) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** La Fecha de Evaluación debe ser posterior a la Fecha de Presentación.");

            }

            if ((fecha1 < minfecha) || (fecha1 > maxfecha)) {
                var isValidItem = false;
                var fechapresentacionplan = false;

                $('#spanfechapresentacionplan').text("Rango válido : 01/01/2000 - 01/01/2100");
            }

            if ($('#FechaPresentacionPlan').val().trim() > new Date().toISOString().substring(0, 10)) {
                var isValidItem = false;
                var fechapresentacionplan = false;
            }

            if ($('#FechaPresentacionPlan').val().split("-")[0] < $('#CicloLectivo').val() || $('#FechaPresentacionPlan').val().split("-")[0] - $('#CicloLectivo').val() > 1) {
                var isValidItem = false;
                var fechapresentacionplan = false;
            }

            if ($('#FechaEvaluacionPlan').val().trim() > new Date().toISOString().substring(0, 10)) {
                var isValidItem = false;
                var fechaevaluacionplan = false;
            }

            if ((fecha2 < minfecha) || (fecha2 > maxfecha)) {
                var isValidItem = false;
                var fechaevaluacionplan = false;

                $('#spanfechaevaluacionplan').text("Rango válido: 01/01/2000 - 01/01/2100");
            }

            if (($('#FechaEvaluacionPlan').val().trim() != '') & ($('#EstadoEvaluacionPlan').val().trim() == 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación requiere una Evaluación!");
            }

            if (($('#FechaEvaluacionPlan').val().trim() == '') & ($('#EstadoEvaluacionPlan').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Evaluación requiere una Fecha de Evaluación!");
            }


            if ($('#FechaPresentacionPlan').val().trim() == '') {
                var isValidItem = false;
                var fechapresentacionplan = false;

                $('#spanfechapresentacionplan').text("Campo requerido.");

            }

            if ($('#IdAlumno').val().trim() == '') {
                var isValidItem = false;
                var alumno = false;

                $('#spanalumno').text("Campo requerido.");
            }

            if ($('#TituloProyecto').val().trim() == '') {
                var isValidItem = false;
                var tituloproyecto = false;

                $('#spantituloproyecto').text("Campo requerido.");
            }
            if ($('#Tutor').val().trim() == '') {
                var isValidItem = false;
                var tutor = false;

                $('#spantutor').text("Campo requerido.");
            }
            if ($('#IdTipoPS').val().trim() == '') {
                var isValidItem = false;
                var tipops = false;

                $('#spantipops').text("Campo requerido.");
            }
            if ($('#IdArea').val().trim() == '') {
                var isValidItem = false;
                var area = false;

                $('#spanarea').text("Campo requerido.");
            }
            if ($('#IdOrganizacion').val().trim() == '') {
                var isValidItem = false; var organizacion = false;

                $('#spanorganizacion').text("Campo requerido.");
            }

            if ($('#CicloLectivo').val().trim() == '') {
                var isValidItem = false;
                var ciclolectivo = false;

                $('#spanciclolectivo').text("Campo requerido.");
            }
            if (($('#FechaEvaluacionPlan').val().trim() == '') & ($('#EstadoEvaluacionPlan').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Evaluación requiere una Fecha de Evaluación!");
            }

            if (($('#EstadoEvaluacionPlan').val().trim() == 2) & ($('#ObservacionesPlan').val().trim() == '')) {
                var isValidItem = false;
                var observacion = false;

                $('#spanobservacion').text("Campo requerido.");
                $('#spanobservacionabajo').text("** El Estado de Evaluación -Desaprobado- requiere una Observación !");
            }

            if (($('#EstadoEvaluacionPlan').val().trim() == 3) & ($('#ObservacionesPlan').val().trim() == '')) {
                var isValidItem = false;
                var observacion = false;

                $('#spanobservacion').text("Campo requerido.");
                $('#spanobservacionabajo').text("** El Estado de Evaluación -Rechazado- requiere una Observación !");
            }

            if ($('#uploadFile').val().trim() !== "") {
                if ($('#uploadFile').val().split('.')[1] != "pdf") {
                    var isValidItem = false;

                }
            }

            if (observacion) {
                $('#spanobservacion').text("");
                $('#spanobservacionabajo').text("");
            }

            if (fechapresentacionplan) {
                $('#spanfechapresentacionplan').text("");
            }
            if (fechaevaluacionplan) {
                $('#spanfechaevaluacionplan').text("");
            }


            if (tituloproyecto) {
                $('#spantituloproyecto').text("");

            } if (alumno) {
                $('#spanalumno').text("");
            }
            if (fechaestado) {
                $('#spanfechaestado').text("");
            }
            if (tutor) {
                $('#spantutor').text("");
            }
            if (area) {
                $('#spanarea').text("");
            }
            if (organizacion) {
                $('#spanorganizacion').text("");
            }
            if (ciclolectivo) {
                $('#spanciclolectivo').text("");
            }
            if (tipops) {
                $('#spantipops').text("");
            }

            if (isValidItem) {

                //var x=document.getElementById("RoleID").innerText;
                bootbox.confirm("¿ Está seguro que desea agregar una nueva PS ?", function (result) {
                    if (result) {
                        permiso.submit();
                    }
                });
            }
        });


    </script>
}