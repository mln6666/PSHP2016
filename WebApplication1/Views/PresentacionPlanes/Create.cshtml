@model WebApplication1.Models.PresentacionPlan

@{
    Layout = null;
}
@{
    ViewBag.Title = "Create";
}
<head>
    <script>
        /////////////////Start:Select searchable////////////////
        function Formato() {
            console.log($('#uploadFile').val().split('.')[1]);
            if ($('#uploadFile').val().split('.')[1] != "pdf"){
                event.preventDefault();
                $('#archivopdf').text("El formato de archivo debe ser PDF");
                $("#botonGuardar").prop("disabled", true);
            } else {
                $('#archivopdf').text("");
                $("#botonGuardar").prop("disabled", false);
            } 
            
            

        }


        $('#plan').submit(function (e) {
            var x = this;
            e.preventDefault();
            var isValidItem = true;

            var fecha1 = new Date($('#FechaPresentacionPlan').val());
            var fecha2 = new Date($('#FechaEvaluacionPlan').val());

            var minfecha = new Date("01/01/2000");
            var maxfecha = new Date("01/01/2100");

            var fechaestado = true;
            var fechapresentacionplan = true;
            var fechaevaluacionplan = true;

            if (fecha1 > fecha2){
                var isValidItem = false;
                var fechaestado = false;
                $('#spanfechaestado').text("** La Fecha de Presentación no puede ser posterior a la Fecha de Evaluación.");
            }
            if ((fecha1 < minfecha) || (fecha1 > maxfecha) ){
                var isValidItem = false;
                var fechapresentacionplan = false;

                $('#spanfechapresentacionplan').text("Rango válido: 01/01/2000 -- 01/01/2100");
            }
            if ((fecha2 < minfecha) || (fecha2 > maxfecha)) {
                var isValidItem = false;
                var fechaevaluacionplan = false;

                $('#spanfechaevaluacionplan').text("Rango válido: 01/01/2000 -- 01/01/2100");

            }
            if ($('#FechaPresentacionPlan').val().trim() == '') {
                var isValidItem = false;
                var fechapresentacionplan = false;

                $('#spanfechapresentacionplan').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionPlan').val().trim() == '') & ($('#EstadoEvaluacionPlan').val().trim() != 0)) {
                var isValidItem = false;
                var fechaevaluacionplan = false;

                $('#spanfechaevaluacionplan').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionPlan').val().trim() != '')& ($('#EstadoEvaluacionPlan').val().trim() == 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación requiere una Evaluación!");
            }

            if ($('#uploadFile').val().trim() !== ""){
            if ($('#uploadFile').val().split('.')[1] != "pdf") {
                var isValidItem = false;
                
               
            }
            }

            if (($('#FechaEvaluacionPlan').val().trim() == '') & ($('#EstadoEvaluacionPlan').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Evaluación requiere una Fecha de Evaluación!");
            }

            if (fechaestado) {
                $('#spanfechaestado').text("");
            }
            if (fechapresentacionplan) {
                $('#spanfechapresentacionplan').text("");
            }
            if (fechaevaluacionplan) {
                $('#spanfechaevaluacionplan').text("");
            }

            if (isValidItem) { //var x=document.getElementById("RoleID").innerText;
                bootbox.confirm("** Está por agregar una presentación del plan, ¿Desea continuar?", function (result) {
                    if (result) {
                        x.submit();
                    }
                });
            }

        });

        ////////////////End:Select searchable///////////////////

    </script>
</head>

@using (Html.BeginForm("Create", "PresentacionPlanes", null , FormMethod.Post, new { id = "plan", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.IdPS)

    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
   
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.FechaPresentacionPlan, "Fecha de Presentación", htmlAttributes: new { @class = "control-label col-md-10" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaPresentacionPlan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaPresentacionPlan, "", new { @class = "text-danger" })
                <span id="spanfechapresentacionplan" style="color:red"></span>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.FechaEvaluacionPlan, "Fecha de Evaluación", htmlAttributes: new { @class = "control-label col-md-10" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaEvaluacionPlan, new { htmlAttributes = new { @class = "form-control" } })
                <span id="spanfechaevaluacionplan" style="color:red"></span>

                @Html.ValidationMessageFor(model => model.FechaEvaluacionPlan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.EstadoEvaluacionPlan, "Estado de Evaluación", htmlAttributes: new { @class = "control-label col-md-10" })
            </div>
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.EstadoEvaluacionPlan, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EstadoEvaluacionPlan, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.EstadoEvaluacionPlan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstadoEvaluacionPlan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstadoEvaluacionPlan, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.ObservacionesPlan, htmlAttributes: new {@class = "control-label col-md-10"})
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.ObservacionesPlan, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ObservacionesPlan, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group" style="padding-left: 80px">
            
            <input type="number" value="@Model.IdPS" style="display: none" name="idPS" id="idPS" />
            <label class="text-right">Adjuntar documento</label>
            <input type="file" onchange="Formato()" name="uploadFile" id="uploadFile" /><br />
            <span id="archivopdf" style="color: red"></span><br />
            <span id="spanfechaestado" style="color: red"></span>
        </div>
       
                    
                   
        <br />
        <div class="form-group row text-center">
            <div>
                <button type="button" class="btn btn-default"  data-dismiss="modal">Cerrar</button>
                <input type="submit" value="Guardar" id="botonGuardar" class="btn btn-success" />
            </div>                
        </div>
        
    </div>

}


    @*<a href="@Url.Action("Index", "PS")" class="btn btn-default"><span class="glyphicon glyphicon-chevron-left"></span> Volver</a>*@
    @*@Html.ActionLink("Volver", "Index", "PS")*@


