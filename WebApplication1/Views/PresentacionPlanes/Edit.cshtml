@model WebApplication1.Models.PresentacionPlan

@*@{
    ViewBag.Title = "Edit";
}*@
@{
    Layout = null;
}
<head>
    <script>
        /////////////////Start:Select searchable////////////////

        $('#editarplan').submit(function (e) {
            var x = this;
            e.preventDefault();
            var isValidItem = true;

            var fechapresentacionplan = true;
            var fechaevaluacionplan = true;
            var fechaestado = true;



            var fecha1 = new Date($('#FechaPresentacionPlan').val());
            var fecha2 = new Date($('#FechaEvaluacionPlan').val());

            var minfecha = new Date("01/01/2000");
            var maxfecha = new Date("01/01/2100");

            if (fecha2 < fecha1) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** La Fecha de Evaluación debe ser mayor a la Fecha de Presentación.");

            }

            if ((fecha1 < minfecha) || (fecha1 > maxfecha) ){
                var isValidItem = false;
                var fechapresentacionplan = false;

                $('#spanfechapresentacionplan').text("Rango válido: 01/01/2000 - 01/01/2100");
            }
            if ((fecha2 < minfecha) || (fecha2 > maxfecha)) {
                var isValidItem = false;
                var fechaevaluacionplan = false;

                $('#spanfechaevaluacionplan').text("Rango válido: 01/01/2000 - 01/01/2100");

            }
            if ($('#FechaPresentacionPlan').val().trim() == '') {
                var isValidItem = false;
                var fechapresentacionplan = false;

                $('#spanfechapresentacionplan').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionPlan').val().trim() == '') & ($('#EstadoEvaluacionPlan').val().trim() != 0)) {
                var isValidItem = false;
                var fechaevaluacionplan = false;

                $('#spanfechaevaluacionplan').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionPlan').val().trim() != '')& ($('#EstadoEvaluacionPlan').val().trim() == 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación requiere una Evaluación!");
            }

            if (($('#FechaEvaluacionPlan').val().trim() == '') & ($('#EstadoEvaluacionPlan').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("**Una Evaluación requiere una Fecha de Evaluación!");
            }

            if (fechaestado) {
                $('#spanfechaestado').text("");
            }
            if (fechapresentacionplan) {
                $('#spanfechapresentacionplan').text("");
            }
            if (fechaevaluacionplan) {
                $('#spanfechaevaluacionplan').text("");
            }

            if (isValidItem) { //var x=document.getElementById("RoleID").innerText;
                bootbox.confirm("** Está por editar una presentación del plan, ¿Desea continuar?", function (result) {
                    if (result) {
                        x.submit();
                    }
                });
            }

        });

        ////////////////End:Select searchable///////////////////

    </script>
</head>
@using (Html.BeginForm("Edit", "PresentacionPlanes", null, FormMethod.Post, new { id = "editarplan" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdPresentacionPlan)
        @Html.HiddenFor(model => model.IdPS)


        <div class="form-group">
            @Html.LabelFor(model => model.FechaPresentacionPlan, "Fecha de Presentación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaPresentacionPlan, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.FechaPresentacionPlan, "", new { @class = "text-danger" })
                <span id="spanfechapresentacionplan" style="color:red"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvaluacionPlan, "Fecha de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaEvaluacionPlan, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.FechaEvaluacionPlan, "", new { @class = "text-danger" })
                <span id="spanfechaevaluacionplan" style="color:red"></span>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstadoEvaluacionPlan, "Estado de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.EstadoEvaluacionPlan, htmlAttributes: new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.EstadoEvaluacionPlan, "", new { @class = "text-danger" })

            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ObservacionesPlan, "Observaciones", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ObservacionesPlan, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    @Html.ValidationMessageFor(model => model.ObservacionesPlan, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.IdPS, "IdPS", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("IdPS", null, htmlAttributes: new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(model => model.IdPS, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <span id="spanfechaestado" style="color:red"></span>

            <div class="form-group row text-center">
                <div>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>

                    <input type="submit" value="Guardar cambios" class="btn btn-success"/>
                </div>
            </div>
        </div>
    

}


