@model WebApplication1.Models.PresentacionInforme

@{
    Layout = null;
}

<head>
    <script>
        /////////////////Start:Select searchable////////////////

        $('#editarinforme').submit(function (e) {
            var x = this;
            e.preventDefault();
            var isValidItem = true;

            var fechapresentacioninforme = true;
            var fechaevaluacioninforme = true;
            var fechaestado = true;

            var fecha1 = new Date($('#FechaPresentacionInforme').val());
            var fecha2 = new Date($('#FechaEvaluacionInforme').val());

            var minfecha = new Date("01/01/2000");
            var maxfecha = new Date("01/01/2100");

          

            if ((fecha1 < minfecha) || (fecha1 > maxfecha) ){
                var isValidItem = false;
                var fechapresentacioninforme = false;

                $('#spanfechapresentacioninforme').text("Rango valido: 01/01/2000 - 01/01/2100");
            }
            if ((fecha2 < minfecha) || (fecha2 > maxfecha)) {
                var isValidItem = false;
                var fechaevaluacioninforme = false;

                $('#spanfechaevaluacioninforme').text("Rango valido: 01/01/2000 - 01/01/2100");

            }
            if ($('#FechaPresentacionInforme').val().trim() == '') {
                var isValidItem = false;
                var fechapresentacioninforme = false;

                $('#spanfechapresentacioninforme').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionInforme').val().trim() == '') & ($('#EstadoEvaluacionInforme').val().trim() != 0)) {
                var isValidItem = false;
                var fechaevaluacioninforme = false;

                $('#spanfechaevaluacioninforme').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionInforme').val().trim() != '')& ($('#EstadoEvaluacionInforme').val().trim() == 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("**Fecha de Evaluación requiere una Evaluación!");
            }

            if (($('#FechaEvaluacionInforme').val().trim() == '') & ($('#EstadoEvaluacionInforme').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("**Una Evaluación requiere una Fecha de Evaluación!");
            }


            if (fechaestado) {
                $('#spanfechaestado').text("");
            }
            if (fechaevaluacioninforme) {
                $('#spanfechaevaluacioninforme').text("");
            }
            if (fechapresentacioninforme) {
                $('#spanfechapresentacioninforme').text("");
            }

            if (isValidItem) { //var x=document.getElementById("RoleID").innerText;
                bootbox.confirm("Esta por editar una presentación del informe, ¿Desea continuar?", function (result) {
                    if (result) {
                        x.submit();
                    }
                });
            }

        });

        ////////////////End:Select searchable///////////////////

    </script>
</head>
@using (Html.BeginForm("Edit", "PresentacionInformes", null, FormMethod.Post, new { id = "editarinforme" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdPresentacionInforme)
        @Html.HiddenFor(model => model.IdPS)

        <div class="form-group">
            @Html.LabelFor(model => model.FechaPresentacionInforme, "Fecha de Presentación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaPresentacionInforme, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.FechaPresentacionInforme, "", new { @class = "text-danger" })
                <span id="spanfechapresentacioninforme" style="color:red"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvaluacionInforme, "Fecha de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaEvaluacionInforme, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.FechaEvaluacionInforme, "", new { @class = "text-danger" })
                <span id="spanfechaevaluacioninforme" style="color:red"></span>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstadoEvaluacionInforme, "Estado de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
               @* @Html.EnumDropDownListFor(model => model.EstadoEvaluacionInforme, htmlAttributes: new { @class = "form-control input-sm" })*@
                @Html.DropDownListFor(m => m.EstadoEvaluacionInforme, (IEnumerable<SelectListItem>)ViewBag.SelectList, htmlAttributes: new { @class = "form-control input-sm" })


                @Html.ValidationMessageFor(model => model.EstadoEvaluacionInforme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObservacionesInforme, "Observaciones", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ObservacionesInforme, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.ObservacionesInforme, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.IdPS, "IdPS", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdPS", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdPS, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <span id="spanfechaestado" style="color:red"></span>

        <div class="form-group row text-center">
            <div>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>

                <input type="submit" value="Guardar cambios" class="btn btn-success" />
            </div>
        </div>
    </div>
}
