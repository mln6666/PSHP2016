
@model WebApplication1.Models.PresentacionInforme
@{
    Layout = null;
}
@*@{
    ViewBag.Title = "Evaluar Informe";
}*@
<head>
    <script>
        /////////////////Start:Select searchable////////////////

        $('#evaluarinforme').submit(function (e) {
            var x = this;
            e.preventDefault();
            var isValidItem = true;

            var fechaestado = true;
            var fechaevaluacioninforme = true;

            var fecha1 = new Date($('#FechaPresentacionInforme').val());

            var fecha2 = new Date($('#FechaEvaluacionInforme').val());

            var minfecha = new Date("01/01/2000");
            var maxfecha = new Date("01/01/2100");

            if (fecha2 < fecha1) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación debe ser mayor a la Fecha de Presentación.");

            }

            if ((fecha2 < minfecha) || (fecha2 > maxfecha)) {
                var isValidItem = false;
                var fechaevaluacioninforme = false;

                $('#spanfechaevaluacioninforme').text("Rango válido: 01/01/2000 - 01/01/2100");

            }

            if ($('#FechaEvaluacionInforme').val().trim() == '') {
                var isValidItem = false;
                var fechaevaluacioninforme = false;

                $('#spanfechaevaluacioninforme').text("Campo requerido.");

            }
            if (($('#FechaEvaluacionInforme').val().trim() != '') & ($('#EstadoEvaluacionInforme').val().trim() == 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación requiere una Evaluación!");
            }

            if (($('#FechaEvaluacionInforme').val().trim() == '') & ($('#EstadoEvaluacionInforme').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Evaluación requiere una Fecha de Evaluación!");
            }

            if (fechaestado) {
                $('#spanfechaestado').text("");
            }
            if (fechaevaluacioninforme) {
                $('#spanfechaevaluacioninforme').text("");
            }

            if (isValidItem) { //var x=document.getElementById("RoleID").innerText;
                bootbox.confirm("Está por evaluar una presentación del informe, ¿Desea continuar?", function (result) {
                    if (result) {
                        x.submit();
                    }
                });
            }

        });

        ////////////////End:Select searchable///////////////////

    </script>
</head>




@using (Html.BeginForm("EvaluarInforme", "PresentacionInformes", null, FormMethod.Post, new { id = "evaluarinforme" }))
{
    @Html.HiddenFor(model => model.IdPS)

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h2>Evaluar Plan</h2>*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdPresentacionInforme)
        <div class="form-group">
            @Html.LabelFor(model => model.FechaPresentacionInforme, "Fecha de Presentación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaPresentacionInforme, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly", Style = "background-color:palegoldenrod" } })
                @Html.ValidationMessageFor(model => model.FechaPresentacionInforme, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FechaEvaluacionInforme, "Fecha de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaEvaluacionInforme, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.FechaEvaluacionInforme, "", new { @class = "text-danger" })
                <span id="spanfechaevaluacioninforme" style="color:red"></span>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstadoEvaluacionInforme, "Estado de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @*@Html.EnumDropDownListFor(model => model.EstadoEvaluacionInforme, htmlAttributes: new { @class = "form-control input-sm" })*@
                @Html.DropDownListFor(m => m.EstadoEvaluacionInforme, (IEnumerable<SelectListItem>)ViewBag.SelectList, htmlAttributes: new { @class = "form-control input-sm" })

                @Html.ValidationMessageFor(model => model.EstadoEvaluacionInforme, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ObservacionesInforme, "Observaciones", htmlAttributes: new {@class = "control-label col-md-6", @Style = "text-align: center"})
            <div class="col-md-4">
                @Html.EditorFor(model => model.ObservacionesInforme, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.ObservacionesInforme, "", new {@class = "text-danger"})
            </div>
        </div>
        <span id="spanfechaestado" style="color:red"></span>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>

                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}




