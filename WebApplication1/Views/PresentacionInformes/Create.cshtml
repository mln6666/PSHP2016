@using System.Globalization
@model WebApplication1.Models.PresentacionInforme
@{
    Layout = null;
}
@{
    ViewBag.Title = "Create";
}
<head>
    <script>
        
        function Formato() {
            console.log($('#uploadFile').val().split('.')[1]);
            if ($('#uploadFile').val().split('.')[1] != "pdf") {
                event.preventDefault();
                $('#archivopdf').text("El formato de archivo debe ser PDF");
            } else {
                $('#archivopdf').text("");
            }



        }
        /////////////////Start:Select searchable////////////////

        $('#informe').submit(function(e) {
            var x = this;
            e.preventDefault();
            var isValidItem = true;

            var fechapresentacioninforme = true;
            var fechaevaluacioninforme = true;
            var fechaestado = true;
            var observacion = true;
            var fechaevaluacionplan = true;

            var fechita = new Date($('#fechita').val());
            var fecha1 = new Date($('#FechaPresentacionInforme').val());
            var fecha2 = new Date($('#FechaEvaluacionInforme').val());

            var minfecha = new Date("01/01/2000");
            var maxfecha = new Date("01/01/2100");

            if (fecha2 < fecha1) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación debe ser mayor a la Fecha de Presentación.");

            }
            if (fecha1 <= fechita) {
                var isValidItem = false;
                var fechaevaluacionplan = false;

                $('#spanfechaevaluacionplan').text("** Una Fecha de Presentación de Informe debe ser mayor a la Fecha de Evaluación del Plan. ");

            }
            if ((fecha1 < minfecha) || (fecha1 > maxfecha)) {
                var isValidItem = false;
                var fechapresentacioninforme = false;

                $('#spanfechapresentacioninforme').text("Rango válido: 01/01/2000 - 01/01/2100");
            }
            if ((fecha2 < minfecha) || (fecha2 > maxfecha)) {
                var isValidItem = false;
                var fechaevaluacioninforme = false;

                $('#spanfechaevaluacioninforme').text("Rango válido: 01/01/2000 - 01/01/2100");

            }

            if ($('#uploadFile').val().trim() !== "") {
                if ($('#uploadFile').val().split('.')[1] != "pdf") {
                    var isValidItem = false;


                }
            }

            if ($('#FechaPresentacionInforme').val().trim() == '') {
                var isValidItem = false;
                var fechapresentacioninforme = false;

                $('#spanfechapresentacioninforme').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionInforme').val().trim() == '') & ($('#EstadoEvaluacionInforme').val().trim() != 0)) {
                var isValidItem = false;
                var fechaevaluacioninforme = false;

                $('#spanfechaevaluacioninforme').text("Campo requerido.");

            }

            if (($('#FechaEvaluacionInforme').val().trim() != '') & ($('#EstadoEvaluacionInforme').val().trim() == 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Fecha de Evaluación requiere una Evaluación!");
            }

            if (($('#FechaEvaluacionInforme').val().trim() == '') & ($('#EstadoEvaluacionInforme').val().trim() != 0)) {
                var isValidItem = false;
                var fechaestado = false;

                $('#spanfechaestado').text("** Una Evaluación requiere una Fecha de Evaluación!");
            }

            if (($('#EstadoEvaluacionInforme').val().trim() == 2) & ($('#ObservacionesInforme').val().trim() == '')) {
                var isValidItem = false;
                var observacion = false;

                $('#spanobservacion').text("Campo requerido.");
                $('#spanobservacionabajo').text("** El Estado de Evaluación -Desaprobado- requiere una Observación !");
            }

            if (observacion) {
                $('#spanobservacion').text("");
                $('#spanobservacionabajo').text("");
            }


            if (fechaestado) {
                $('#spanfechaestado').text("");
            }
            if (fechaevaluacionplan) {
                $('#spanfechaevaluacionplan').text("");
            }
            if (fechaevaluacioninforme) {
                $('#spanfechaevaluacioninforme').text("");
            }
            if (fechapresentacioninforme) {
                $('#spanfechapresentacioninforme').text("");
            }

            if (isValidItem) { //var x=document.getElementById("RoleID").innerText;
                bootbox.confirm("Está por agregar una presentación del informe, ¿Desea continuar?", function(result) {
                    if (result) {
                        x.submit();
                    }
                });
            }

        });

        ////////////////End:Select searchable///////////////////

    </script>
</head>
<input id="fechita" style="display: none" value="@ViewBag.fechita.ToString("yyyy/MM/dd", CultureInfo.InvariantCulture)"/>
@using (Html.BeginForm("Create", "PresentacionInformes", null, FormMethod.Post, new { id = "informe", enctype = "multipart/form-data" }))
{    @Html.HiddenFor(model => model.IdPS)

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.FechaPresentacionInforme, "Fecha de Presentación", htmlAttributes: new { @class = "control-label col-md-10" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaPresentacionInforme, new { htmlAttributes = new { @class = "form-control" } })
                <span id="spanfechapresentacioninforme" style="color:red"></span>

                @Html.ValidationMessageFor(model => model.FechaPresentacionInforme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.FechaEvaluacionInforme, "Fecha de Evaluación", htmlAttributes: new { @class = "control-label col-md-10" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.FechaEvaluacionInforme, new { htmlAttributes = new { @class = "form-control" } })
                <span id="spanfechaevaluacioninforme" style="color: red"></span>

                @Html.ValidationMessageFor(model => model.FechaEvaluacionInforme, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstadoEvaluacionInforme, "Estado de Evaluación", htmlAttributes: new { @class = "control-label col-md-6", @Style = "text-align: center" })
            <div class="col-md-4">
                @*@Html.EnumDropDownListFor(model => model.EstadoEvaluacionInforme, htmlAttributes: new { @class = "form-control input-sm" })*@
                @Html.DropDownListFor(m => m.EstadoEvaluacionInforme, (IEnumerable<SelectListItem>)ViewBag.SelectList, htmlAttributes: new { @class = "form-control input-sm" })

                @Html.ValidationMessageFor(model => model.EstadoEvaluacionInforme, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EstadoEvaluacionInforme, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstadoEvaluacionInforme, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstadoEvaluacionInforme, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.ObservacionesInforme, "Observaciones", htmlAttributes: new { @class = "control-label col-md-10" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.ObservacionesInforme, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ObservacionesInforme, "", new {@class = "text-danger"})
                <span id="spanobservacion" style="color: red"></span>

            </div>
            <div class="form-group" style="padding-left: 90px">

                <input type="number" value="@Model.IdPS" style="display: none" name="idPS" id="idPS" />
                <label class="text-right">Adjuntar documento</label>
                <input type="file" onchange="Formato()" name="uploadFile" id="uploadFile" /><br />
                <span id="archivopdf" style="color: red"></span><br />
                <span id="spanfechaestado" style="color: red"></span>
            </div>
        </div>
        <p> <span id="spanfechaestado" style="color: red"></span></p>
        <p>
            <span id="spanobservacionabajo" style="color: red"></span>
        </p>
        <p> <span id="spanfechaevaluacionplan" style="color: red"></span></p>

        <div class="form-group row text-center">
            <div>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}


