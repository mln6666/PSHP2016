@using System.Web.UI.WebControls
@model WebApplication1.Models.Alumno

@{
    ViewBag.Title = "Create";
}
<style>
    .hr5 {
        margin-top: 3px;
        margin-bottom: 15px;
        border: 0;
        border-top: 1px solid #eeeeee;
    }
</style>

@if (User.IsInRole("Administrador") | User.IsInRole("Moderador"))
{
    if (TempData["vencer"] != null)
    {
        {
            <input id="vencer" style="display: none" value="@TempData["vencer"]" />

        }

    }
}
<h2 class="text-center">Nuevo Alumno</h2>
<hr style="color:grey;border-color:grey"/>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "agregaralumno" }))
{
    @Html.AntiForgeryToken()
    <h3 style="padding-left: ">Datos Académicos</h3>
    <hr align="left" class="hr5" style="color: grey; border-color: lightgray; width: 550px;" />

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Legajo <sup>(*)</sup></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Legajo, new {htmlAttributes = new {@class = "form-control input-sm", @onkeypress = "solonumeros()"}})
                @Html.ValidationMessageFor(model => model.Legajo, "", new {@class = "text-danger"})
                <span id="spanlegajoexistente" style="color: red"></span>

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Nombre <sup>(*)</sup></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreAlu, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.NombreAlu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Apellido <sup>(*)</sup></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApellidoAlu, new {htmlAttributes = new {@class = "form-control input-sm"}})
                @Html.ValidationMessageFor(model => model.ApellidoAlu, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Año de Ingreso <sup>(*)</sup></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AñoIngreso, new {htmlAttributes = new {@class = "form-control input-sm", @onkeypress = "solonumeros()", @Min = 1900}})
                @Html.ValidationMessageFor(model => model.AñoIngreso, "", new {@class = "text-danger"})
            </div>
        </div>
        <h3 style="padding-left: ">Datos Personales</h3>
        <hr align="left" class="hr5" style="color: grey; border-color: lightgray; width: 550px;" />

        <div class="form-group">
            @Html.LabelFor(model => model.CorreoAlu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CorreoAlu, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.CorreoAlu, "", new { @class = "text-danger" })
            </div>
        </div>
       <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control input-sm" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>
           
            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control input-sm", @onkeypress = "solonumeros()" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control input-sm", @onkeypress = "solonumeros()" } })
                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="form-group">
        @Html.LabelFor(model => model.DNI, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control input-sm", @onkeypress = "solonumeros()", @MinLength = 7, @MaxLength=8 } })
            @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
        </div>
    </div>


        <div class="form-group">
            <p><sup>(*)</sup>  Campo obligatorio.</p>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar y Crear PS" id="guardarycrear" class="btn btn-success dos"/>
                <input type="submit" value="Guardar" id="guardar" class="btn btn-success uno"/>


            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", "Alumnos")" class="btn btn-default "><span class="glyphicon glyphicon-chevron-left"></span> Volver</a>    
</div>

@if (ViewBag.alumnoexistente != null)
{
    <div id="myModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h3 class="modal-title">Aviso.</h3>
                </div>
                <div class="modal-body">
                    <h5 style="color: Red">@ViewBag.alumnoexistente</h5>
                </div>
                <div class="modal-footer">
                    @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function() {
            $("#myModal").modal('show');
        });

        $(".dos").click(function() {
            mensaje = "Esta por agregar un nuevo Alumno y Crear su PS, ¿Desea continuar?";

            $("form").attr("action", "/Alumnos/Createalups");
        });

        $(".uno").click(function() {
            mensaje = "Esta por agregar un nuevo Alumno, ¿Desea continuar?";

            $("form").attr("action", "/Alumnos/Create");
        });


        $('#agregaralumno').submit(function(e) {
            alumno = this;
            e.preventDefault();
            
                var options = {};
                )'></script> = "/Alumnos/GetLegajo";
                options.type = "GET";
                options.data = { "mileg": $("#Legajo").val() };
                options.dataType = "json";
                options.success = function (data) {
                    if (data > 0) {
                        $('#spanlegajoexistente').text("Legajo existente.");
                        
                    } else {
                        $('#spanlegajoexistente').text("");
                        if ($(alumno).valid()) {
                            bootbox.confirm({
                                message: mensaje,
                                buttons: {
                                    confirm: {
                                        label: 'Confirmar',
                                        className: 'btn-success'
                                    },
                                    cancel: {
                                        label: 'Cancelar',
                                        className: 'btn-danger'
                                    }
                                },
                                callback: function (result) {
                                    if (result) {
                                        alumno.submit();
                                    }
                                }
                            });
                        }
                    }
                    

                };
                $.ajax(options);
            
          
            

        });


        //$('#agregaralumno').submit(function(e) {
        //    var alumno = this;
        //    e.preventDefault();
        //    //var x=document.getElementById("RoleID").innerText;

        //        bootbox.confirm("Esta por agregar un nuevo Alumno, ¿Desea continuar?", function(result) {
        //            if (result) {
        //                alumno.submit();
        //            }
        //        });

        //});
    </script>
}